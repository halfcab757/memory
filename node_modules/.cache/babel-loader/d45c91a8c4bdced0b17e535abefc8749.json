{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Martin\\\\R_2021\\\\memory\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport MemoryCards from './components/MemoryCards/MemoryCards';\nimport Start from './pages/Start/Start';\nimport Final from './pages/Final/Final';\nimport Header from './components/Layout/Header/Header';\nimport About from './pages/About/About';\nimport { MemoryContext } from './context/memoryContext';\nimport { memcards } from './data/Cards';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [started, setStarted] = useState(); // isOver default ändern\n\n  const [isOver, setIsOver] = useState(); // set counter to zero\n\n  const [counter, setCounter] = useState(3);\n  const [mode, setMode] = useState('memes');\n  const [showAbout, setShowAbout] = useState();\n  const [memoryCards, setMemoryCards] = useState(); // const contextValue = {\n  //   cards: memoryCards,\n  //   startGame: startGameHandler(),\n  //   resetGame: reset()\n  // };\n\n  console.log('RERENDER APP, cards in APP: ', memoryCards);\n\n  function shuffle(array) {\n    let n = array.length - 1;\n\n    for (let i = n; i > 0; i--) {\n      const j = Math.floor(Math.random() * i);\n      const temp = array[i];\n      array[i] = array[j];\n      array[j] = temp;\n    }\n\n    return array;\n  }\n\n  function reset() {\n    console.log('RESET');\n    setStarted(false);\n    setIsOver(false);\n    setCounter(0);\n    setMode();\n  }\n\n  function startGameHandler() {\n    setIsOver(false);\n    setStarted(true);\n  }\n\n  useEffect(() => {\n    const cards = shuffle(memcards.slice());\n    setMemoryCards(cards);\n  }, []);\n\n  function finishGame() {\n    setIsOver(true);\n  }\n\n  function increaseCounter() {\n    console.log('increasee');\n    setCounter(prevCounter => prevCounter + 1);\n  }\n\n  function selectModeHandler(mode) {\n    setMode(mode);\n    console.log(mode);\n  }\n\n  function showAboutHandler() {\n    console.log('onShowAbout');\n    setShowAbout(true);\n  }\n\n  function closeAboutHandler() {\n    setShowAbout(false);\n  }\n\n  function closeAboutAndResetHandler() {\n    console.log('closeAndCancel');\n    setShowAbout(false);\n    reset();\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      count: counter,\n      activeMode: mode,\n      onSelectMode: selectModeHandler,\n      onShowAbout: showAboutHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [!started && !showAbout && /*#__PURE__*/_jsxDEV(Start, {\n        onStart: startGameHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 38\n      }, this), started && !isOver && !showAbout && /*#__PURE__*/_jsxDEV(MemoryCards, {\n        cards: memoryCards,\n        increaseCount: increaseCounter,\n        onFinish: finishGame,\n        isOver: isOver,\n        count: counter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 48\n      }, this), /*#__PURE__*/_jsxDEV(Final, {\n        show: isOver && !showAbout,\n        onStart: startGameHandler,\n        counter: counter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this), showAbout && /*#__PURE__*/_jsxDEV(About, {\n      onCloseAbout: closeAboutHandler,\n      onCloseAboutAndReset: closeAboutAndResetHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"2AR8UTVh8bTnAUv0pzmbeJOI//A=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Martin/R_2021/memory/src/App.js"],"names":["React","useState","useEffect","MemoryCards","Start","Final","Header","About","MemoryContext","memcards","App","started","setStarted","isOver","setIsOver","counter","setCounter","mode","setMode","showAbout","setShowAbout","memoryCards","setMemoryCards","console","log","shuffle","array","n","length","i","j","Math","floor","random","temp","reset","startGameHandler","cards","slice","finishGame","increaseCounter","prevCounter","selectModeHandler","showAboutHandler","closeAboutHandler","closeAboutAndResetHandler"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport MemoryCards from './components/MemoryCards/MemoryCards';\nimport Start from './pages/Start/Start';\nimport Final from './pages/Final/Final';\nimport Header from './components/Layout/Header/Header';\nimport About from './pages/About/About';\n\nimport { MemoryContext } from './context/memoryContext';\n\nimport { memcards } from './data/Cards';\n\nimport './App.css';\n\nfunction App() {\n\n  const [started, setStarted] = useState();\n  // isOver default ändern\n  const [isOver, setIsOver] = useState();\n  // set counter to zero\n  const [counter, setCounter] = useState(3);\n  const [mode, setMode] = useState('memes');\n  const [showAbout, setShowAbout] = useState();\n  const [memoryCards, setMemoryCards] = useState();\n\n  // const contextValue = {\n  //   cards: memoryCards,\n  //   startGame: startGameHandler(),\n  //   resetGame: reset()\n  // };\n\n  console.log('RERENDER APP, cards in APP: ', memoryCards);\n\n  function shuffle(array) {\n    let n = array.length -1;\n    for(let i = n; i > 0; i--){\n        const j = Math.floor(Math.random() * i)\n        const temp = array[i]\n        array[i] = array[j]\n        array[j] = temp;\n      }\n    return array;\n}\n\n  function reset() {\n    console.log('RESET');\n    setStarted(false);\n    setIsOver(false);\n    setCounter(0);\n    setMode();\n\n  }\n\n  function startGameHandler() {\n    setIsOver(false);\n    setStarted(true);\n  }\n\n  useEffect(() => {\n    const cards = shuffle(memcards.slice());\n    setMemoryCards(cards);\n  }, []); \n\n  function finishGame() {\n    setIsOver(true);\n  }\n\n  function increaseCounter() {\n    console.log('increasee');\n    setCounter(prevCounter => prevCounter + 1);\n  }\n\n  function selectModeHandler(mode) {\n    setMode(mode);\n    console.log(mode);\n  }\n\n  function showAboutHandler() {\n    console.log('onShowAbout')\n    setShowAbout(true);\n  }\n\n  function closeAboutHandler() {\n    setShowAbout(false);\n  }\n\n  function closeAboutAndResetHandler() {\n    console.log('closeAndCancel');\n    setShowAbout(false);\n    reset();\n  }\n\n  return (\n    <React.Fragment>\n      {/* <MemoryContext.Provider> */}\n      <Header \n        count={counter}\n        activeMode={mode}\n        onSelectMode={selectModeHandler}\n        onShowAbout={showAboutHandler}/>\n        <div className='App'>\n          {!started && !showAbout && <Start onStart={startGameHandler}/>}\n          {started && !isOver && !showAbout && <MemoryCards \n                          cards={memoryCards}\n                          increaseCount={increaseCounter}\n                          onFinish={finishGame}\n                          isOver={isOver}\n                          count={counter}/>}\n          <Final \n                        show={isOver && !showAbout}\n                        onStart={startGameHandler}\n                        counter={counter}/>\n      </div>\n      {showAbout && <About \n        onCloseAbout={closeAboutHandler}\n        onCloseAboutAndReset={closeAboutAndResetHandler}/>}\n      {/* </MemoryContext.Provider> */}\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}