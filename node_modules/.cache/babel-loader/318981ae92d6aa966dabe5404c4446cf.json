{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Martin\\\\R_2021\\\\memory\\\\src\\\\components\\\\OpenCard\\\\OpenCard.js\";\nimport React from 'react';\nimport Transition from 'react-transition-group/Transition';\nimport classes from './OpenCard.module.css'; // import Backdrop from '../Backdrop/Backdrop';\n\nimport Button from '../UI/Button/Button'; // import meme from '../../assets/meme.jpg';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function OpenCard(props) {\n  console.log(props);\n  return (\n    /*#__PURE__*/\n    // <Backdrop\n    //     show={props.card}>\n    _jsxDEV(Transition, {\n      in: props.show,\n      timeout: 800,\n      mountOnEnter: true,\n      unmountOnExit: true,\n      children: state => {\n        const cssClasses = [classes.OpenCard, state === 'entering' ? classes.Open : state === 'exiting' ? classes.Closed : null];\n\n        let renderedCard = /*#__PURE__*/_jsxDEV(\"div\", {\n          className: cssClasses.join(' '),\n          children: [props.card && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: props.card.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 44\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.ButtonContainer,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              clickHandler: props.onClose,\n              type: \"button\",\n              look: \"literature\",\n              children: \"Weiter\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }, this);\n\n        if (props.cardsMatch) {\n          renderedCard = /*#__PURE__*/_jsxDEV(\"div\", {\n            className: cssClasses.join(' '),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: '80%',\n                margin: '0 auto'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"\\\"\", props.card.fullQuote[0]]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  textAlign: 'right'\n                },\n                children: [props.card.fullQuote[1], \"\\\"\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Du hast ein Match!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Fast eine Freude wie auf Tinder, oder?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Diese Zeile stammt aus dem Song \\\"\", props.card.song, \"\\\" von \", props.card.artist, \".\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 41\n              }, this), \"Erschienen ist der Song \", props.card.year, \" auf dem Album \", props.card.record, \".\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.ButtonContainer,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                clickHandler: props.onClose,\n                type: \"button\",\n                look: \"literature\",\n                children: \"Weiter\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }, this);\n        }\n\n        return renderedCard;\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this) // </Backdrop>\n\n  );\n}\n_c = OpenCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"OpenCard\");","map":{"version":3,"sources":["C:/Users/Martin/R_2021/memory/src/components/OpenCard/OpenCard.js"],"names":["React","Transition","classes","Button","OpenCard","props","console","log","show","state","cssClasses","Open","Closed","renderedCard","join","card","title","ButtonContainer","onClose","cardsMatch","width","margin","fullQuote","textAlign","song","artist","year","record"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Transition from 'react-transition-group/Transition';\r\n\r\nimport classes from './OpenCard.module.css';\r\n\r\n// import Backdrop from '../Backdrop/Backdrop';\r\nimport Button from '../UI/Button/Button';\r\n\r\n// import meme from '../../assets/meme.jpg';\r\n\r\nexport default function OpenCard(props) {\r\n\r\n    console.log(props);\r\n\r\n    return (\r\n        // <Backdrop\r\n        //     show={props.card}>\r\n            <Transition\r\n                in={props.show}\r\n                timeout={800}\r\n                mountOnEnter\r\n                unmountOnExit>\r\n                {state => {\r\n                    const cssClasses = [\r\n                        classes.OpenCard,\r\n                        state === 'entering'\r\n                        ? classes.Open\r\n                        : state === 'exiting' \r\n                        ? classes.Closed\r\n                        : null\r\n                    ];\r\n\r\n                let renderedCard = (\r\n                        <div\r\n                            className={cssClasses.join(' ')}>\r\n                            {props.card && <p>{props.card.title}</p>}\r\n                            <div \r\n                                className={classes.ButtonContainer}>\r\n                                <Button \r\n                                    clickHandler={props.onClose}\r\n                                    type='button'\r\n                                    look='literature'>\r\n                                        Weiter\r\n                                    </Button>\r\n                            </div>\r\n                        </div>\r\n                );\r\n                \r\n                if(props.cardsMatch) {\r\n                    renderedCard = (\r\n                            <div\r\n                                className={cssClasses.join(' ')}>\r\n                                    {/* <div\r\n                                        className={classes.CardContent}>\r\n                                        {props.card && <p>{props.card.title}</p>}\r\n                                    </div>\r\n                                    <div\r\n                                        className={classes.CardContent}>\r\n                                        {props.card && <p>{props.card.title}</p>}\r\n                                    </div> */}\r\n                                    <div style={{width: '80%', margin: '0 auto'}}>\r\n                                        <p>\"{props.card.fullQuote[0]}</p>\r\n                                        <p style={{textAlign: 'right'}}>{props.card.fullQuote[1]}\"</p>\r\n                                        <h3>Du hast ein Match!</h3>\r\n                                        <p>Fast eine Freude wie auf Tinder, oder?</p>\r\n                                        <p>Diese Zeile stammt aus dem Song \"{props.card.song}\" von {props.card.artist}.</p>\r\n                                        Erschienen ist der Song {props.card.year} auf dem Album {props.card.record}.\r\n                                    </div>\r\n                                <div \r\n                                    className={classes.ButtonContainer}>\r\n                                    <Button \r\n                                        clickHandler={props.onClose}\r\n                                        type='button'\r\n                                        look='literature'>\r\n                                        Weiter\r\n                                    </Button>\r\n                                </div>\r\n                            </div>\r\n                    );\r\n                }\r\n\r\n                    return renderedCard;\r\n                }}\r\n\r\n            </Transition>\r\n        // </Backdrop>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}