{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Martin\\\\R_2021\\\\memory\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport MemoryCards from './components/MemoryCards/MemoryCards';\nimport Start from './pages/Start/Start';\nimport Final from './pages/Final/Final';\nimport Header from './components/Layout/Header/Header';\nimport About from './pages/About/About';\nimport { MemoryContext } from './context/memoryContext';\nimport { memcards } from './data/Cards';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [started, setStarted] = useState(); // isOver default ändern\n\n  const [isOver, setIsOver] = useState(); // set counter to zero\n\n  const [counter, setCounter] = useState(3);\n  const [mode, setMode] = useState('memes');\n  const [showAbout, setShowAbout] = useState();\n  const [memoryCards, setMemoryCards] = useState();\n  const contextValue = {\n    cards: memoryCards,\n    startGame: startGameHandler(),\n    resetGame: reset()\n  };\n  console.log('RERENDER APP, cards: ', memoryCards);\n\n  function shuffle(array) {\n    let n = array.length - 1;\n\n    for (let i = n; i > 0; i--) {\n      const j = Math.floor(Math.random() * i);\n      const temp = array[i];\n      array[i] = array[j];\n      array[j] = temp;\n    }\n\n    return array;\n  }\n\n  function reset() {\n    console.log('RESET');\n    setStarted(false);\n    setIsOver(false);\n    setCounter(0);\n    setMode();\n  }\n\n  function startGameHandler() {\n    setIsOver(false);\n    setStarted(true);\n  } // useEffect(() => {\n  //   const cards = shuffle(memcards.slice());\n  //   setMemoryCards(cards);\n  // }, []); \n\n\n  function finishGame() {\n    setIsOver(true);\n  }\n\n  function increaseCounter() {\n    console.log('increasee');\n    setCounter(prevCounter => prevCounter + 1);\n  }\n\n  function selectModeHandler(mode) {\n    setMode(mode);\n    console.log(mode);\n  }\n\n  function showAboutHandler() {\n    console.log('onShowAbout');\n    setShowAbout(true);\n  }\n\n  function closeAboutHandler() {\n    setShowAbout(false);\n  }\n\n  function closeAboutAndResetHandler() {\n    console.log('closeAndCancel');\n    setShowAbout(false);\n    reset();\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MemoryContext.Provider, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        count: counter,\n        activeMode: mode,\n        onSelectMode: selectModeHandler,\n        onShowAbout: showAboutHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [!started && !showAbout && /*#__PURE__*/_jsxDEV(Start, {\n          onStart: startGameHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 38\n        }, this), started && !isOver && !showAbout && /*#__PURE__*/_jsxDEV(MemoryCards, {\n          cards: memoryCards,\n          increaseCount: increaseCounter,\n          onFinish: finishGame,\n          isOver: isOver,\n          count: counter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 48\n        }, this), /*#__PURE__*/_jsxDEV(Final, {\n          show: isOver && !showAbout,\n          onStart: startGameHandler,\n          counter: counter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), showAbout && /*#__PURE__*/_jsxDEV(About, {\n        onCloseAbout: closeAboutHandler,\n        onCloseAboutAndReset: closeAboutAndResetHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"6s1Hl/Z7tt6SPpZpB6x6PdRkY+g=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Martin/R_2021/memory/src/App.js"],"names":["React","useState","useEffect","MemoryCards","Start","Final","Header","About","MemoryContext","memcards","App","started","setStarted","isOver","setIsOver","counter","setCounter","mode","setMode","showAbout","setShowAbout","memoryCards","setMemoryCards","contextValue","cards","startGame","startGameHandler","resetGame","reset","console","log","shuffle","array","n","length","i","j","Math","floor","random","temp","finishGame","increaseCounter","prevCounter","selectModeHandler","showAboutHandler","closeAboutHandler","closeAboutAndResetHandler"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,WAAP,MAAwB,sCAAxB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,MAAP,MAAmB,mCAAnB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AAEA,SAASC,aAAT,QAA8B,yBAA9B;AAEA,SAASC,QAAT,QAAyB,cAAzB;AAEA,OAAO,WAAP;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,EAAtC,CAFa,CAGb;;AACA,QAAM,CAACY,MAAD,EAASC,SAAT,IAAsBb,QAAQ,EAApC,CAJa,CAKb;;AACA,QAAM,CAACc,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACgB,IAAD,EAAOC,OAAP,IAAkBjB,QAAQ,CAAC,OAAD,CAAhC;AACA,QAAM,CAACkB,SAAD,EAAYC,YAAZ,IAA4BnB,QAAQ,EAA1C;AACA,QAAM,CAACoB,WAAD,EAAcC,cAAd,IAAgCrB,QAAQ,EAA9C;AAEA,QAAMsB,YAAY,GAAG;AACnBC,IAAAA,KAAK,EAAEH,WADY;AAEnBI,IAAAA,SAAS,EAAEC,gBAAgB,EAFR;AAGnBC,IAAAA,SAAS,EAAEC,KAAK;AAHG,GAArB;AAMAC,EAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCT,WAArC;;AAEA,WAASU,OAAT,CAAiBC,KAAjB,EAAwB;AACtB,QAAIC,CAAC,GAAGD,KAAK,CAACE,MAAN,GAAc,CAAtB;;AACA,SAAI,IAAIC,CAAC,GAAGF,CAAZ,EAAeE,CAAC,GAAG,CAAnB,EAAsBA,CAAC,EAAvB,EAA0B;AACtB,YAAMC,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBJ,CAA3B,CAAV;AACA,YAAMK,IAAI,GAAGR,KAAK,CAACG,CAAD,CAAlB;AACAH,MAAAA,KAAK,CAACG,CAAD,CAAL,GAAWH,KAAK,CAACI,CAAD,CAAhB;AACAJ,MAAAA,KAAK,CAACI,CAAD,CAAL,GAAWI,IAAX;AACD;;AACH,WAAOR,KAAP;AACH;;AAEC,WAASJ,KAAT,GAAiB;AACfC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAlB,IAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,IAAAA,SAAS,CAAC,KAAD,CAAT;AACAE,IAAAA,UAAU,CAAC,CAAD,CAAV;AACAE,IAAAA,OAAO;AAER;;AAED,WAASQ,gBAAT,GAA4B;AAC1BZ,IAAAA,SAAS,CAAC,KAAD,CAAT;AACAF,IAAAA,UAAU,CAAC,IAAD,CAAV;AACD,GA1CY,CA4Cb;AACA;AACA;AACA;;;AAEA,WAAS6B,UAAT,GAAsB;AACpB3B,IAAAA,SAAS,CAAC,IAAD,CAAT;AACD;;AAED,WAAS4B,eAAT,GAA2B;AACzBb,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAd,IAAAA,UAAU,CAAC2B,WAAW,IAAIA,WAAW,GAAG,CAA9B,CAAV;AACD;;AAED,WAASC,iBAAT,CAA2B3B,IAA3B,EAAiC;AAC/BC,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAY,IAAAA,OAAO,CAACC,GAAR,CAAYb,IAAZ;AACD;;AAED,WAAS4B,gBAAT,GAA4B;AAC1BhB,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAV,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD;;AAED,WAAS0B,iBAAT,GAA6B;AAC3B1B,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;;AAED,WAAS2B,yBAAT,GAAqC;AACnClB,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAV,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACAQ,IAAAA,KAAK;AACN;;AAED,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,2BACE,QAAC,aAAD,CAAe,QAAf;AAAA,8BACA,QAAC,MAAD;AACE,QAAA,KAAK,EAAEb,OADT;AAEE,QAAA,UAAU,EAAEE,IAFd;AAGE,QAAA,YAAY,EAAE2B,iBAHhB;AAIE,QAAA,WAAW,EAAEC;AAJf;AAAA;AAAA;AAAA;AAAA,cADA,eAME;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,mBACG,CAAClC,OAAD,IAAY,CAACQ,SAAb,iBAA0B,QAAC,KAAD;AAAO,UAAA,OAAO,EAAEO;AAAhB;AAAA;AAAA;AAAA;AAAA,gBAD7B,EAEGf,OAAO,IAAI,CAACE,MAAZ,IAAsB,CAACM,SAAvB,iBAAoC,QAAC,WAAD;AACrB,UAAA,KAAK,EAAEE,WADc;AAErB,UAAA,aAAa,EAAEqB,eAFM;AAGrB,UAAA,QAAQ,EAAED,UAHW;AAIrB,UAAA,MAAM,EAAE5B,MAJa;AAKrB,UAAA,KAAK,EAAEE;AALc;AAAA;AAAA;AAAA;AAAA,gBAFvC,eAQE,QAAC,KAAD;AACc,UAAA,IAAI,EAAEF,MAAM,IAAI,CAACM,SAD/B;AAEc,UAAA,OAAO,EAAEO,gBAFvB;AAGc,UAAA,OAAO,EAAEX;AAHvB;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,EAmBCI,SAAS,iBAAI,QAAC,KAAD;AACZ,QAAA,YAAY,EAAE2B,iBADF;AAEZ,QAAA,oBAAoB,EAAEC;AAFV;AAAA;AAAA;AAAA;AAAA,cAnBd;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD;;GAzGQrC,G;;KAAAA,G;AA2GT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport MemoryCards from './components/MemoryCards/MemoryCards';\nimport Start from './pages/Start/Start';\nimport Final from './pages/Final/Final';\nimport Header from './components/Layout/Header/Header';\nimport About from './pages/About/About';\n\nimport { MemoryContext } from './context/memoryContext';\n\nimport { memcards } from './data/Cards';\n\nimport './App.css';\n\nfunction App() {\n\n  const [started, setStarted] = useState();\n  // isOver default ändern\n  const [isOver, setIsOver] = useState();\n  // set counter to zero\n  const [counter, setCounter] = useState(3);\n  const [mode, setMode] = useState('memes');\n  const [showAbout, setShowAbout] = useState();\n  const [memoryCards, setMemoryCards] = useState();\n\n  const contextValue = {\n    cards: memoryCards,\n    startGame: startGameHandler(),\n    resetGame: reset()\n  };\n\n  console.log('RERENDER APP, cards: ', memoryCards);\n\n  function shuffle(array) {\n    let n = array.length -1;\n    for(let i = n; i > 0; i--){\n        const j = Math.floor(Math.random() * i)\n        const temp = array[i]\n        array[i] = array[j]\n        array[j] = temp;\n      }\n    return array;\n}\n\n  function reset() {\n    console.log('RESET');\n    setStarted(false);\n    setIsOver(false);\n    setCounter(0);\n    setMode();\n\n  }\n\n  function startGameHandler() {\n    setIsOver(false);\n    setStarted(true);\n  }\n\n  // useEffect(() => {\n  //   const cards = shuffle(memcards.slice());\n  //   setMemoryCards(cards);\n  // }, []); \n\n  function finishGame() {\n    setIsOver(true);\n  }\n\n  function increaseCounter() {\n    console.log('increasee');\n    setCounter(prevCounter => prevCounter + 1);\n  }\n\n  function selectModeHandler(mode) {\n    setMode(mode);\n    console.log(mode);\n  }\n\n  function showAboutHandler() {\n    console.log('onShowAbout')\n    setShowAbout(true);\n  }\n\n  function closeAboutHandler() {\n    setShowAbout(false);\n  }\n\n  function closeAboutAndResetHandler() {\n    console.log('closeAndCancel');\n    setShowAbout(false);\n    reset();\n  }\n\n  return (\n    <React.Fragment>\n      <MemoryContext.Provider>\n      <Header \n        count={counter}\n        activeMode={mode}\n        onSelectMode={selectModeHandler}\n        onShowAbout={showAboutHandler}/>\n        <div className='App'>\n          {!started && !showAbout && <Start onStart={startGameHandler}/>}\n          {started && !isOver && !showAbout && <MemoryCards \n                          cards={memoryCards}\n                          increaseCount={increaseCounter}\n                          onFinish={finishGame}\n                          isOver={isOver}\n                          count={counter}/>}\n          <Final \n                        show={isOver && !showAbout}\n                        onStart={startGameHandler}\n                        counter={counter}/>\n      </div>\n      {showAbout && <About \n        onCloseAbout={closeAboutHandler}\n        onCloseAboutAndReset={closeAboutAndResetHandler}/>}\n      </MemoryContext.Provider>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}