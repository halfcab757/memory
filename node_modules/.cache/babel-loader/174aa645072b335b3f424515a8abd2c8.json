{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Martin\\\\R_2021\\\\memory\\\\src\\\\components\\\\MemoryCards\\\\MemoryCards.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport MemoryCard from '../MemoryCard/MemoryCard';\nimport classes from './MemoryCards.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst memoryCards = [{\n  id: 1,\n  pairId: 'A',\n  title: 'A',\n  revealed: false\n}, {\n  id: 2,\n  pairId: 'B',\n  title: 'B',\n  revealed: false\n}];\n\nconst MemoryCards = () => {\n  _s();\n\n  const [cards, setCards] = useState(memoryCards);\n\n  const cardCover = () => {\n    const updatedCards = cards.map(card => {\n      return { ...card,\n        revealed: false\n      };\n    });\n  };\n\n  const cardClickHandler = cardId => {\n    const selectedCardIndex = cards.findIndex(card => card.id === cardId);\n    const selectedCard = cards[selectedCardIndex];\n    selectedCard.revealed = true;\n    const updatedCards = [...cards];\n    updatedCards[selectedCardIndex] = selectedCard;\n    setCards(updatedCards);\n    setTimeout(() => {\n      cardCover();\n    }, 1000);\n  };\n\n  const renderedCards = cards.map(card => {\n    return /*#__PURE__*/_jsxDEV(MemoryCard, {\n      card: card,\n      clickHandler: cardClickHandler\n    }, card.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 16\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.MemoryCards,\n    children: renderedCards\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MemoryCards, \"avc9vFP1BPJl0jWVrnu1/pDqSXM=\");\n\n_c = MemoryCards;\nexport default MemoryCards;\n\nvar _c;\n\n$RefreshReg$(_c, \"MemoryCards\");","map":{"version":3,"sources":["C:/Users/Martin/R_2021/memory/src/components/MemoryCards/MemoryCards.js"],"names":["useState","MemoryCard","classes","memoryCards","id","pairId","title","revealed","MemoryCards","cards","setCards","cardCover","updatedCards","map","card","cardClickHandler","cardId","selectedCardIndex","findIndex","selectedCard","setTimeout","renderedCards"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,OAAOC,UAAP,MAAuB,0BAAvB;AAEA,OAAOC,OAAP,MAAoB,0BAApB;;AAEA,MAAMC,WAAW,GAAG,CAChB;AACIC,EAAAA,EAAE,EAAE,CADR;AAEIC,EAAAA,MAAM,EAAE,GAFZ;AAGIC,EAAAA,KAAK,EAAE,GAHX;AAIIC,EAAAA,QAAQ,EAAE;AAJd,CADgB,EAOhB;AACIH,EAAAA,EAAE,EAAE,CADR;AAEIC,EAAAA,MAAM,EAAE,GAFZ;AAGIC,EAAAA,KAAK,EAAE,GAHX;AAIIC,EAAAA,QAAQ,EAAE;AAJd,CAPgB,CAApB;;AAeA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAEtB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAACG,WAAD,CAAlC;;AAEA,QAAMQ,SAAS,GAAG,MAAM;AACpB,UAAMC,YAAY,GAAGH,KAAK,CAACI,GAAN,CAAUC,IAAI,IAAI;AACnC,aAAO,EACH,GAAGA,IADA;AAEHP,QAAAA,QAAQ,EAAE;AAFP,OAAP;AAIH,KALoB,CAArB;AAMH,GAPD;;AASA,QAAMQ,gBAAgB,GAAIC,MAAD,IAAY;AACjC,UAAMC,iBAAiB,GAAGR,KAAK,CAACS,SAAN,CAAgBJ,IAAI,IAAIA,IAAI,CAACV,EAAL,KAAYY,MAApC,CAA1B;AACA,UAAMG,YAAY,GAAGV,KAAK,CAACQ,iBAAD,CAA1B;AACAE,IAAAA,YAAY,CAACZ,QAAb,GAAwB,IAAxB;AACA,UAAMK,YAAY,GAAG,CAAC,GAAGH,KAAJ,CAArB;AACAG,IAAAA,YAAY,CAACK,iBAAD,CAAZ,GAAkCE,YAAlC;AACAT,IAAAA,QAAQ,CAACE,YAAD,CAAR;AACAQ,IAAAA,UAAU,CAAC,MAAM;AACbT,MAAAA,SAAS;AACR,KAFK,EAEH,IAFG,CAAV;AAGC,GAVL;;AAYA,QAAMU,aAAa,GAAGZ,KAAK,CAACI,GAAN,CAAUC,IAAI,IAAI;AACpC,wBAAO,QAAC,UAAD;AACH,MAAA,IAAI,EAAEA,IADH;AAGH,MAAA,YAAY,EAAEC;AAHX,OAEED,IAAI,CAACV,EAFP;AAAA;AAAA;AAAA;AAAA,YAAP;AAKH,GANqB,CAAtB;AAUA,sBACI;AAAK,IAAA,SAAS,EAAEF,OAAO,CAACM,WAAxB;AAAA,cACKa;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAxCD;;GAAMb,W;;KAAAA,W;AA0CN,eAAeA,WAAf","sourcesContent":["import { useState } from 'react';\r\n\r\nimport MemoryCard from '../MemoryCard/MemoryCard';\r\n\r\nimport classes from './MemoryCards.module.css';\r\n\r\nconst memoryCards = [\r\n    {\r\n        id: 1,\r\n        pairId: 'A',\r\n        title: 'A',\r\n        revealed: false,\r\n    },\r\n    {\r\n        id: 2,\r\n        pairId: 'B',\r\n        title: 'B',\r\n        revealed: false,\r\n    }\r\n];\r\n\r\nconst MemoryCards = () => {\r\n\r\n    const [cards, setCards] = useState(memoryCards);\r\n\r\n    const cardCover = () => {\r\n        const updatedCards = cards.map(card => {\r\n            return {\r\n                ...card,\r\n                revealed: false\r\n            }\r\n        });\r\n    }\r\n\r\n    const cardClickHandler = (cardId) => {\r\n        const selectedCardIndex = cards.findIndex(card => card.id === cardId);\r\n        const selectedCard = cards[selectedCardIndex];\r\n        selectedCard.revealed = true;\r\n        const updatedCards = [...cards];\r\n        updatedCards[selectedCardIndex] = selectedCard;\r\n        setCards(updatedCards);\r\n        setTimeout(() => {\r\n            cardCover();\r\n            }, 1000);\r\n        }\r\n\r\n    const renderedCards = cards.map(card => {\r\n        return <MemoryCard \r\n            card={card} \r\n            key={card.id}\r\n            clickHandler={cardClickHandler}\r\n            />;\r\n    });\r\n\r\n\r\n\r\n    return (\r\n        <div className={classes.MemoryCards}>\r\n            {renderedCards}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MemoryCards;"]},"metadata":{},"sourceType":"module"}