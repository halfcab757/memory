{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Martin\\\\R_2021\\\\memory\\\\src\\\\components\\\\DetailCard\\\\DetailCard.js\";\nimport React from 'react';\nimport classes from './DetailCard.module.css';\nimport Button from '../../components/UI/Button/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DetailCard(props) {\n  console.log('props.card: ', props);\n  let techStack;\n  let links;\n  let content;\n\n  if (props.card.techStack) {\n    techStack = /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.Legend,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Level:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Good\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Very good\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: classes.List,\n        children: props.card.techStack.map(item => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            className: classes.ListItem,\n            style: {\n              width: item.level\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: item.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.Info,\n              children: \"i\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this);\n  }\n\n  ;\n\n  if (props.card.id === 3) {\n    content = /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"I build this web app to practice my React.js skills by building and deploying an entire project. I chose this game because it offerd a lot of possibilities for user interaction.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"At first, I made a sketch of a component tree and panned the state management. I took a practical approach and tried to keep it simple. In the end, I found a solution using only the most common React hooks and local state. Using Redux or even just context was not necessary. To apply animations, I used CSS as well as the package \\\"React Fragment Group\\\". Last but not least, I spent a good amount of time testing fonts, sizes, negative spaces, colors and much more.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Now I am really happy with this app and I learned a lot during this process, e.g.: Creating a project can easily become challenging compared to how simple it\\xB4s basic idea seem.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this);\n  }\n\n  ;\n\n  if (props.card.id === 1) {\n    content = /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Hey, I am Martin, I am 35 years old and I live close to Cologne, Germany. I am a pretty passionate guy doing a lot of different activities: I am into skateboarding, surfing and fitness. I also read a lot of novels and practice languages - currently portuges. All these things have one thing in common: They are about learning something new and about being creative. I have been working in online marketing a few years now and looking back, it was only a question of time that coding catches me. So for about a year now, I have been learning JavaScript, React and much more. This game is my second project. My first one is a fullstack shoppinglist app using React, Express.js and MongoDB. You can check it out here: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this);\n  }\n\n  if (props.card.links) {\n    links = /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: props.card.links.map(link => {\n        return /*#__PURE__*/_jsxDEV(\"a\", {\n          href: link.link,\n          target: \"_blank\",\n          rel: \"noreferrer\",\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            children: link.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.DetailCard,\n    children: [props.card.image && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.ImageContainer,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: props.card.image,\n        alt: props.card.alt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 78\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 38\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: props.card.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), techStack && techStack, links && links, content && content, /*#__PURE__*/_jsxDEV(Button, {\n      type: \"button\",\n      look: \"music\",\n      clickHandler: props.closeCard,\n      children: \"Close\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n}\n_c = DetailCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"DetailCard\");","map":{"version":3,"sources":["C:/Users/Martin/R_2021/memory/src/components/DetailCard/DetailCard.js"],"names":["React","classes","Button","DetailCard","props","console","log","techStack","links","content","card","Legend","List","map","item","ListItem","width","level","title","Info","id","link","image","ImageContainer","alt","closeCard"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport classes from './DetailCard.module.css';\r\n\r\nimport Button from '../../components/UI/Button/Button';\r\n\r\nexport default function DetailCard(props) {\r\n    console.log('props.card: ', props);\r\n\r\n    let techStack;\r\n    let links;\r\n    let content;\r\n\r\n    if(props.card.techStack) {\r\n        techStack = (\r\n        <React.Fragment>\r\n        <div\r\n            className={classes.Legend}>\r\n            <span>Level:</span>\r\n            <span>Good</span>\r\n            <span>Very good</span>\r\n        </div>\r\n        <ul\r\n            className={classes.List}>\r\n            { props.card.techStack.map(item => {\r\n            return (\r\n                <li\r\n                    className={classes.ListItem}\r\n                    style={{width: item.level}}>\r\n                    <span>{item.title}</span>\r\n                    <div\r\n                        className={classes.Info}>i</div>\r\n                    {/* <span>{item.level}</span> */}\r\n                </li>\r\n                );\r\n            })}\r\n        </ul>\r\n        </React.Fragment>\r\n    )};\r\n\r\n    if(props.card.id === 3) {\r\n        content = (\r\n            <React.Fragment>\r\n                <p>I build this web app to practice my React.js skills by building and deploying an entire project. I chose this game because it offerd a lot of possibilities for user interaction.</p>\r\n                <p>At first, I made a sketch of a component tree and panned the state management. I took a practical approach and tried to keep it simple. In the end, I found a solution using only the most common React hooks and local state. Using Redux or even just context was not necessary. To apply animations, I used CSS as well as the package \"React Fragment Group\". Last but not least, I spent a good amount of time testing fonts, sizes, negative spaces, colors and much more.</p>\r\n                <p>Now I am really happy with this app and I learned a lot during this process, e.g.: Creating a project can easily become challenging compared to how simple it´s basic idea seem.</p>\r\n            </React.Fragment>\r\n        )};\r\n\r\n    if(props.card.id === 1) {\r\n        content = (\r\n            <React.Fragment>\r\n                <p>Hey, I am Martin, I am 35 years old and I live close to Cologne, Germany. I am a pretty passionate guy doing a lot of different activities: I am into skateboarding, surfing and fitness. I also read a lot of novels and practice languages - currently portuges. All these things have one thing in common: They are about learning something new and about being creative. I have been working in online marketing a few years now and looking back, it was only a question of time that coding catches me. So for about a year now, I have been learning JavaScript, React and much more. This game is my second project. My first one is a fullstack shoppinglist app using React, Express.js and MongoDB. You can check it out here: </p>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    if(props.card.links) {\r\n        links = (\r\n            <ul>\r\n            {props.card.links.map(link => {\r\n                return (\r\n                    <a \r\n                        href={link.link}\r\n                        target=\"_blank\"\r\n                        rel='noreferrer'>\r\n                        <li>\r\n                            {link.title}\r\n                        </li>\r\n                     </a>\r\n                );\r\n            })}\r\n        </ul>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div\r\n            className={classes.DetailCard}>\r\n                {props.card.image && <div className={classes.ImageContainer}><img src={props.card.image} alt={props.card.alt} /></div>}\r\n            <h1>{props.card.title}</h1>\r\n            {/* <p>{props.card.content}</p> */}\r\n            {techStack && techStack}\r\n            {links && links}\r\n            {content && content}\r\n            <Button\r\n                type=\"button\"\r\n                look=\"music\"\r\n                clickHandler={props.closeCard}>Close</Button>\r\n        </div>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}