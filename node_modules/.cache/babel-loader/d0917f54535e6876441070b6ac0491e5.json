{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Martin\\\\R_2021\\\\memory\\\\src\\\\components\\\\About\\\\AboutApp\\\\AboutApp.js\";\nimport classes from './AboutApp.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AboutApp() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"How I build this app?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"I build this web app to practice my React.js skills by building and deploying an entire project. I chose this game because it offerd a lot of possibilities for user interaction.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"At first, I made a sketch of a component tree and panned the state management. I took a practical approach and tried to keep it simple. In the end, I found a solution using only the most common React hooks and local state. Using Redux or even just context was not necessary. To apply animations, I used CSS as well as the package \\\"React Fragment Group\\\". Last but not least, I spent a good amount of time testing fonts, sizes, negative spaces, colors and much more.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Now I am really happy with this app and I learned a lot during this process, e.g.: Creating a project can easily become challenging compared to how simple it's basic idea seems.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 9\n  }, this);\n}\n_c = AboutApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"AboutApp\");","map":{"version":3,"sources":["C:/Users/Martin/R_2021/memory/src/components/About/AboutApp/AboutApp.js"],"names":["classes","AboutApp"],"mappings":";AAAA,OAAOA,OAAP,MAAoB,uBAApB;;AAEA,eAAe,SAASC,QAAT,GAAoB;AAC/B,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;KATuBA,Q","sourcesContent":["import classes from './AboutApp.module.css';\r\n\r\nexport default function AboutApp() {\r\n    return (\r\n        <div>\r\n            <h1>How I build this app?</h1>\r\n            <p>I build this web app to practice my React.js skills by building and deploying an entire project. I chose this game because it offerd a lot of possibilities for user interaction.</p>\r\n            <p>At first, I made a sketch of a component tree and panned the state management. I took a practical approach and tried to keep it simple. In the end, I found a solution using only the most common React hooks and local state. Using Redux or even just context was not necessary. To apply animations, I used CSS as well as the package \"React Fragment Group\". Last but not least, I spent a good amount of time testing fonts, sizes, negative spaces, colors and much more.</p>\r\n            <p>Now I am really happy with this app and I learned a lot during this process, e.g.: Creating a project can easily become challenging compared to how simple it's basic idea seems.</p>\r\n        </div>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}