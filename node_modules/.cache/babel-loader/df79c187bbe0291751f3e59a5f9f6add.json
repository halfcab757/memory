{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Martin\\\\R_2021\\\\memory\\\\src\\\\components\\\\OpenCard\\\\OpenCard.js\";\nimport React from 'react';\nimport Transition from 'react-transition-group/Transition';\nimport classes from './OpenCard.module.css';\nimport Button from '../UI/Button/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function OpenCard(props) {\n  return /*#__PURE__*/_jsxDEV(Transition, {\n    in: props.show,\n    timeout: 400,\n    mountOnEnter: true,\n    unmountOnExit: true,\n    children: state => {\n      const cardCssClasses = [classes.opencard, state === 'entering' ? classes.open : state === 'exiting' ? classes.closed : null];\n      const quoteCssClasses = [classes.quote__lineleft, state === 'entered' ? classes.shown : null, state === 'exiting' ? classes.staticvisible : null];\n      const quoteClassesTwo = [classes.quote__lineright, state === 'entered' ? classes.showntwo : null, state === 'exiting' ? classes.staticvisible : null];\n      const artistClasses = [classes.quote__artist, state === 'entered' ? classes.shownthree : null, state === 'exiting' ? classes.staticvisible : null];\n      const funFactClasses = [classes.funfact, state === 'entered' ? classes.visible : null];\n      const buttonClasses = [classes.buttoncontainer, state === 'entered' ? classes.visible : null, state === 'entered' ? classes.wiggle : null];\n      const quoteDivClasses = [classes.quote, state === 'entered' ? classes.bordervisible : null];\n\n      const renderedCard = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: cardCssClasses.join(' '),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: quoteDivClasses.join(' '),\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: quoteCssClasses.join(' '),\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\\"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 86\n            }, this), props.card.fullQuote[0]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 45\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: quoteClassesTwo.join(' '),\n            children: [props.card.fullQuote[1], /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\\"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 111\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 45\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: artistClasses.join(' '),\n            children: props.card.artist\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 45\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 37\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: funFactClasses.join(' '),\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Did you know?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 41\n          }, this), props.card.fact && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: props.card.fact\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 61\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 37\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: buttonClasses.join(' '),\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            clickHandler: props.onClose,\n            type: \"button\",\n            look: \"RED\",\n            children: \"GO ON\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 29\n      }, this);\n\n      return renderedCard;\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 13\n  }, this);\n}\n_c = OpenCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"OpenCard\");","map":{"version":3,"sources":["C:/Users/Martin/R_2021/memory/src/components/OpenCard/OpenCard.js"],"names":["React","Transition","classes","Button","OpenCard","props","show","state","cardCssClasses","opencard","open","closed","quoteCssClasses","quote__lineleft","shown","staticvisible","quoteClassesTwo","quote__lineright","showntwo","artistClasses","quote__artist","shownthree","funFactClasses","funfact","visible","buttonClasses","buttoncontainer","wiggle","quoteDivClasses","quote","bordervisible","renderedCard","join","card","fullQuote","artist","fact","onClose"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Transition from 'react-transition-group/Transition';\r\n\r\nimport classes from './OpenCard.module.css';\r\n\r\nimport Button from '../UI/Button/Button';\r\n\r\nexport default function OpenCard(props) {\r\n\r\n    return (\r\n            <Transition\r\n                in={props.show}\r\n                timeout={400}\r\n                mountOnEnter\r\n                unmountOnExit>\r\n                {state => {\r\n                    const cardCssClasses = [\r\n                        classes.opencard,\r\n                        state === 'entering'\r\n                        ? classes.open\r\n                        : state === 'exiting' \r\n                        ? classes.closed\r\n                        : null\r\n                    ];\r\n\r\n                    const quoteCssClasses = [\r\n                        classes.quote__lineleft,\r\n                        state === 'entered'\r\n                        ? classes.shown\r\n                        : null,\r\n                        state === 'exiting'\r\n                        ? classes.staticvisible\r\n                        : null\r\n                    ];\r\n\r\n                    const quoteClassesTwo = [\r\n                        classes.quote__lineright,\r\n                        state === 'entered'\r\n                        ? classes.showntwo\r\n                        : null,\r\n                        state === 'exiting'\r\n                        ? classes.staticvisible\r\n                        : null\r\n                    ];\r\n\r\n                    const artistClasses = [\r\n                        classes.quote__artist,\r\n                        state === 'entered'\r\n                        ? classes.shownthree\r\n                        : null,\r\n                        state === 'exiting'\r\n                        ? classes.staticvisible\r\n                        : null\r\n                    ];\r\n\r\n                    const funFactClasses = [\r\n                        classes.funfact,\r\n                        state === 'entered'\r\n                        ? classes.visible\r\n                        : null\r\n                    ];\r\n\r\n                    const buttonClasses = [\r\n                        classes.buttoncontainer,\r\n                        state === 'entered'\r\n                        ? classes.visible\r\n                        : null,\r\n                        state === 'entered'\r\n                        ? classes.wiggle\r\n                        : null\r\n                    ];\r\n\r\n                    const quoteDivClasses = [\r\n                        classes.quote,\r\n                        state === 'entered'\r\n                        ? classes.bordervisible\r\n                        : null\r\n                    ];\r\n\r\n                    const renderedCard = (\r\n                            <div\r\n                                className={cardCssClasses.join(' ')}>\r\n                                    <div className={quoteDivClasses.join(' ')}>\r\n                                            <p className={quoteCssClasses.join(' ')}><span>\"</span>{props.card.fullQuote[0]}</p>\r\n                                            <p className={quoteClassesTwo.join(' ')}>{props.card.fullQuote[1]}<span>\"</span></p>\r\n                                            <p className={artistClasses.join(' ')}>{props.card.artist}</p>\r\n                                        </div>\r\n                                    <div className={funFactClasses.join(' ')}>\r\n                                        <h3>Did you know?</h3>\r\n                                        {props.card.fact && <p>{props.card.fact}</p>}\r\n                                    </div>\r\n                                <div \r\n                                    className={buttonClasses.join(' ')}>\r\n                                    <Button \r\n                                        clickHandler={props.onClose}\r\n                                        type='button'\r\n                                        look='RED'>\r\n                                        GO ON\r\n                                    </Button>\r\n                                </div>\r\n                            </div>\r\n                    );\r\n                \r\n\r\n                    return renderedCard;\r\n                }}\r\n            </Transition>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}