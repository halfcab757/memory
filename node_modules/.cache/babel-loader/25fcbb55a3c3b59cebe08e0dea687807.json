{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Martin\\\\R_2021\\\\memory\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport MemoryCards from './components/MemoryCards/MemoryCards';\nimport Start from './pages/Start/Start';\nimport Final from './pages/Final/Final';\nimport Header from './components/Layout/Header/Header';\nimport About from './pages/About/About';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [started, setStarted] = useState(); // isOver default ändern\n\n  const [isOver, setIsOver] = useState(); // set counter to zero\n\n  const [counter, setCounter] = useState(3);\n  const [mode, setMode] = useState('memes');\n  const [showAbout, setShowAbout] = useState();\n\n  function reset() {\n    setStarted(false);\n    setIsOver(false);\n    setCounter(0);\n    setMode();\n  }\n\n  function startGameHandler() {\n    setIsOver(false);\n    setStarted(true);\n  }\n\n  function finishGame() {\n    setIsOver(true);\n  }\n\n  function increaseCounter() {\n    console.log('increasee');\n    setCounter(prevCounter => prevCounter + 1);\n  }\n\n  function selectModeHandler(mode) {\n    setMode(mode);\n    console.log(mode);\n  }\n\n  function showAboutHandler() {\n    console.log('onShowAbout');\n    setShowAbout(true);\n  }\n\n  function closeAboutHandler() {\n    setShowAbout(false);\n  }\n\n  function closeAboutAndResetHandler() {\n    setShowAbout(false);\n    reset();\n  }\n\n  console.log('counter', counter);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      count: counter,\n      activeMode: mode,\n      onSelectMode: selectModeHandler,\n      onShowAbout: showAboutHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [!started && !showAbout && /*#__PURE__*/_jsxDEV(Start, {\n        onStart: startGameHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 38\n      }, this), started && !isOver && !showAbout && /*#__PURE__*/_jsxDEV(MemoryCards, {\n        increaseCount: increaseCounter,\n        onFinish: finishGame,\n        isOver: isOver,\n        count: counter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 48\n      }, this), /*#__PURE__*/_jsxDEV(Final, {\n        show: isOver,\n        onStart: startGameHandler,\n        counter: counter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this), showAbout && /*#__PURE__*/_jsxDEV(About, {\n      onCloseAbout: closeAboutHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"yK+UI2stcf2bO2IFRankuUvxY5k=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Martin/R_2021/memory/src/App.js"],"names":["React","useState","MemoryCards","Start","Final","Header","About","App","started","setStarted","isOver","setIsOver","counter","setCounter","mode","setMode","showAbout","setShowAbout","reset","startGameHandler","finishGame","increaseCounter","console","log","prevCounter","selectModeHandler","showAboutHandler","closeAboutHandler","closeAboutAndResetHandler"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\nimport MemoryCards from './components/MemoryCards/MemoryCards';\nimport Start from './pages/Start/Start';\nimport Final from './pages/Final/Final';\nimport Header from './components/Layout/Header/Header';\nimport About from './pages/About/About';\n\nimport './App.css';\n\nfunction App() {\n\n  const [started, setStarted] = useState();\n  // isOver default ändern\n  const [isOver, setIsOver] = useState();\n  // set counter to zero\n  const [counter, setCounter] = useState(3);\n  const [mode, setMode] = useState('memes');\n  const [showAbout, setShowAbout] = useState();\n\n  function reset() {\n    setStarted(false);\n    setIsOver(false);\n    setCounter(0);\n    setMode();\n\n  }\n\n  function startGameHandler() {\n    setIsOver(false);\n    setStarted(true);\n  }\n\n  function finishGame() {\n    setIsOver(true);\n  }\n\n  function increaseCounter() {\n    console.log('increasee');\n    setCounter(prevCounter => prevCounter + 1);\n  }\n\n  function selectModeHandler(mode) {\n    setMode(mode);\n    console.log(mode);\n  }\n\n  function showAboutHandler() {\n    console.log('onShowAbout')\n    setShowAbout(true);\n  }\n\n  function closeAboutHandler() {\n    setShowAbout(false);\n  }\n\n  function closeAboutAndResetHandler() {\n    setShowAbout(false);\n    reset();\n  }\n\n  console.log('counter', counter);\n\n  return (\n    <React.Fragment>\n      <Header \n        count={counter}\n        activeMode={mode}\n        onSelectMode={selectModeHandler}\n        onShowAbout={showAboutHandler}/>\n        <div className='App'>\n          {!started && !showAbout && <Start onStart={startGameHandler}/>}\n          {started && !isOver && !showAbout && <MemoryCards \n                          increaseCount={increaseCounter}\n                          onFinish={finishGame}\n                          isOver={isOver}\n                          count={counter}/>}\n          <Final \n                        show={isOver}\n                        onStart={startGameHandler}\n                        counter={counter}/>\n      </div>\n      {showAbout && <About \n        onCloseAbout={closeAboutHandler}/>}\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}