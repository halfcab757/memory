{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Martin\\\\R_2021\\\\memory\\\\src\\\\components\\\\MemoryCards\\\\MemoryCards.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport MemoryCard from '../MemoryCard/MemoryCard';\nimport classes from './MemoryCards.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst memoryCards = [{\n  id: 1,\n  pairId: 'A',\n  title: 'A',\n  revealed: false\n}, {\n  id: 2,\n  pairId: 'A',\n  title: 'A',\n  revealed: false\n}, {\n  id: 3,\n  pairId: 'B',\n  title: 'B',\n  revealed: false\n}, {\n  id: 4,\n  pairId: 'B',\n  title: 'B',\n  revealed: false\n}, {\n  id: 5,\n  pairId: 'C',\n  title: 'C',\n  revealed: false\n}, {\n  id: 6,\n  pairId: 'D',\n  title: 'D',\n  revealed: false\n}, {\n  id: 7,\n  pairId: 'E',\n  title: 'E',\n  revealed: false\n}, {\n  id: 8,\n  pairId: 'E',\n  title: 'E',\n  revealed: false\n}, {\n  id: 9,\n  pairId: 'F',\n  title: 'F',\n  revealed: false\n}, {\n  id: 10,\n  pairId: 'F',\n  title: 'F',\n  revealed: false\n}, {\n  id: 11,\n  pairId: 'G',\n  title: 'G',\n  revealed: false\n}, {\n  id: 12,\n  pairId: 'G',\n  title: 'G',\n  revealed: false\n}];\n\nconst MemoryCards = () => {\n  _s();\n\n  const [cards, setCards] = useState(memoryCards);\n  const [counter, setCounter] = useState(0);\n  const [revealedCards, setRevealedCards] = useState(0);\n  console.log(counter);\n\n  const cardCover = () => {\n    const updatedCards = cards.map(card => {\n      return { ...card,\n        revealed: false\n      };\n    });\n    setCards(updatedCards);\n    setRevealedCards(0);\n  };\n\n  const cardClickHandler = cardId => {\n    if (revealedCards >= 2) {\n      return;\n    }\n\n    setRevealedCards(prevRevealedCards => prevRevealedCards++);\n    const selectedCardIndex = cards.findIndex(card => card.id === cardId);\n    const selectedCard = cards[selectedCardIndex];\n    selectedCard.revealed = true;\n    const updatedCards = [...cards];\n    updatedCards[selectedCardIndex] = selectedCard;\n    setCards(updatedCards);\n    setCounter(prevCounter => prevCounter + 1);\n\n    if (revealedCards >= 2) {\n      setTimeout(() => {\n        cardCover();\n      }, 1000);\n    }\n  };\n\n  const renderedCards = cards.map(card => {\n    return /*#__PURE__*/_jsxDEV(MemoryCard, {\n      card: card,\n      clickHandler: cardClickHandler,\n      enabled: !cardIsRevealed\n    }, card.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 16\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.MemoryCards,\n    children: renderedCards\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MemoryCards, \"eKzorcznPh3z2on3N1ftQsT/gEI=\");\n\n_c = MemoryCards;\nexport default MemoryCards;\n\nvar _c;\n\n$RefreshReg$(_c, \"MemoryCards\");","map":{"version":3,"sources":["C:/Users/Martin/R_2021/memory/src/components/MemoryCards/MemoryCards.js"],"names":["useState","MemoryCard","classes","memoryCards","id","pairId","title","revealed","MemoryCards","cards","setCards","counter","setCounter","revealedCards","setRevealedCards","console","log","cardCover","updatedCards","map","card","cardClickHandler","cardId","prevRevealedCards","selectedCardIndex","findIndex","selectedCard","prevCounter","setTimeout","renderedCards","cardIsRevealed"],"mappings":"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","sourcesContent":["import { useState } from 'react';\r\n\r\nimport MemoryCard from '../MemoryCard/MemoryCard';\r\n\r\nimport classes from './MemoryCards.module.css';\r\n\r\nconst memoryCards = [\r\n    {\r\n        id: 1,\r\n        pairId: 'A',\r\n        title: 'A',\r\n        revealed: false,\r\n    },\r\n    {\r\n        id: 2,\r\n        pairId: 'A',\r\n        title: 'A',\r\n        revealed: false,\r\n    },\r\n    {\r\n        id: 3,\r\n        pairId: 'B',\r\n        title: 'B',\r\n        revealed: false,\r\n    },\r\n    {\r\n        id: 4,\r\n        pairId: 'B',\r\n        title: 'B',\r\n        revealed: false,\r\n    },\r\n    {\r\n        id: 5,\r\n        pairId: 'C',\r\n        title: 'C',\r\n        revealed: false,\r\n    },\r\n    {\r\n        id: 6,\r\n        pairId: 'D',\r\n        title: 'D',\r\n        revealed: false,\r\n    },\r\n    {\r\n        id: 7,\r\n        pairId: 'E',\r\n        title: 'E',\r\n        revealed: false,\r\n    },\r\n    {\r\n        id: 8,\r\n        pairId: 'E',\r\n        title: 'E',\r\n        revealed: false,\r\n    },\r\n    {\r\n        id: 9,\r\n        pairId: 'F',\r\n        title: 'F',\r\n        revealed: false,\r\n    },\r\n    {\r\n        id: 10,\r\n        pairId: 'F',\r\n        title: 'F',\r\n        revealed: false,\r\n    },\r\n    {\r\n        id: 11,\r\n        pairId: 'G',\r\n        title: 'G',\r\n        revealed: false,\r\n    },\r\n    {\r\n        id: 12,\r\n        pairId: 'G',\r\n        title: 'G',\r\n        revealed: false,\r\n    }\r\n];\r\n\r\nconst MemoryCards = () => {\r\n\r\n    const [cards, setCards] = useState(memoryCards);\r\n    const [counter, setCounter] = useState(0);\r\n    const [revealedCards, setRevealedCards] = useState(0);\r\n\r\n    console.log(counter);\r\n\r\n    const cardCover = () => {\r\n        const updatedCards = cards.map(card => {\r\n            return {\r\n                ...card,\r\n                revealed: false\r\n            }\r\n        });\r\n        setCards(updatedCards);\r\n        setRevealedCards(0);\r\n    }\r\n\r\n    const cardClickHandler = (cardId) => {\r\n        if(revealedCards >= 2) {\r\n            return;\r\n        }\r\n        setRevealedCards(prevRevealedCards => prevRevealedCards++);\r\n        const selectedCardIndex = cards.findIndex(card => card.id === cardId);\r\n        const selectedCard = cards[selectedCardIndex];\r\n        selectedCard.revealed = true;\r\n        const updatedCards = [...cards];\r\n        updatedCards[selectedCardIndex] = selectedCard;\r\n        setCards(updatedCards);\r\n        setCounter(prevCounter => prevCounter + 1);\r\n        if(revealedCards >= 2) {\r\n            setTimeout(() => {\r\n                cardCover();\r\n                }, 1000);\r\n            }\r\n        }\r\n\r\n    const renderedCards = cards.map(card => {\r\n        return <MemoryCard \r\n            card={card} \r\n            key={card.id}\r\n            clickHandler={cardClickHandler}\r\n            enabled={!cardIsRevealed}\r\n            />;\r\n    });\r\n\r\n\r\n\r\n    return (\r\n        <div className={classes.MemoryCards}>\r\n            {renderedCards}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MemoryCards;"]},"metadata":{},"sourceType":"module"}