{"ast":null,"code":"import _toConsumableArray from\"C:/Users/Martin/R_2021/memory/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _createForOfIteratorHelper from\"C:/Users/Martin/R_2021/memory/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";import _objectSpread from\"C:/Users/Martin/R_2021/memory/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:/Users/Martin/R_2021/memory/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,useCallback}from'react';import MemoryCard from'../../components/MemoryCard/MemoryCard';import Backdrop from'../../components/Backdrop/Backdrop';import OpenCard from'../../components/OpenCard/OpenCard';import NoMatchCard from'../../components/NoMatchCard/NoMatchCard';import classes from'./Memory.module.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Memory=function Memory(props){var _useState=useState(props.cards),_useState2=_slicedToArray(_useState,2),cards=_useState2[0],setCards=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),revealedCards=_useState4[0],setRevealedCards=_useState4[1];var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),isMatch=_useState6[0],setIsMatch=_useState6[1];var _useState7=useState(),_useState8=_slicedToArray(_useState7,2),focusedCard=_useState8[0],setFocusedCard=_useState8[1];var _useState9=useState(),_useState10=_slicedToArray(_useState9,2),showBackdrop=_useState10[0],setShowBackdrop=_useState10[1];var _useState11=useState(),_useState12=_slicedToArray(_useState11,2),isNoMatch=_useState12[0],setIsNoMatch=_useState12[1];var onFinish=props.onFinish;var allPairsFound=cards.filter(function(card){return!card.pairFound;}).length===0;useEffect(function(){},[cards]);var cardCover=useCallback(function(){setRevealedCards(0);var updatedCards=cards.map(function(card){return _objectSpread(_objectSpread({},card),{},{revealed:card.pairFound});});setCards(updatedCards);},[cards,setCards,setRevealedCards]);useEffect(function(){return cardCover();},[]);var blurCard=useCallback(function(){setIsMatch(false);setIsNoMatch(false);setTimeout(function(){setShowBackdrop(false);setFocusedCard(null);},500);setTimeout(function(){cardCover();},400);var allPairsFound=cards.filter(function(card){return!card.pairFound;}).length===0;if(allPairsFound){return onFinish();}},[setIsMatch,setShowBackdrop,setFocusedCard,cardCover,onFinish,cards]);var validateCardClick=function validateCardClick(cardId){if(focusedCard&&focusedCard.id===cardId){return false;}if(revealedCards>=2){return false;}return true;};var showFeedback=function showFeedback(cardsMatch){if(cardsMatch){setTimeout(function(){setRevealedCards(0);setShowBackdrop(true);return setIsMatch(true);},1000);}if(!cardsMatch){setTimeout(function(){setIsNoMatch(true);setShowBackdrop(true);},1400);}};var checkForMatch=function checkForMatch(cards){if(revealedCards===0){return;}if(revealedCards===1){var visibleCards=cards.filter(function(card){return card.revealed&&!card.pairFound;});var cardsMatch=visibleCards[0].pairId===visibleCards[1].pairId;if(cardsMatch){var _iterator=_createForOfIteratorHelper(visibleCards),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var card=_step.value;card.pairFound=true;}}catch(err){_iterator.e(err);}finally{_iterator.f();}}showFeedback(cardsMatch);}};var updateCards=function updateCards(clickedCardId){var updatedCards=_toConsumableArray(cards);var selectedCardIndex=updatedCards.findIndex(function(card){return card.id===clickedCardId;});var selectedCard=updatedCards[selectedCardIndex];selectedCard.revealed=true;updatedCards[selectedCardIndex]=selectedCard;return updatedCards;};var cardClickHandler=function cardClickHandler(cardId){var isValidCardClick=validateCardClick(cardId);if(!isValidCardClick){return;}setRevealedCards(function(prevRevealedCards){return prevRevealedCards+1;});props.increaseCount();setFocusedCard(cards.find(function(card){return card.id===cardId;}));var updatedCards=updateCards(cardId);setCards(updatedCards);checkForMatch(updatedCards);};var renderedCards=cards.map(function(card){return/*#__PURE__*/_jsx(MemoryCard,{card:card,clickHandler:cardClickHandler,disabled:revealedCards>=2,cards:cards},card.id);});if(!props.show){return null;}return/*#__PURE__*/_jsxs(\"div\",{className:classes.memorycards,children:[!props.isOver&&renderedCards,/*#__PURE__*/_jsx(Backdrop,{show:showBackdrop}),/*#__PURE__*/_jsx(OpenCard,{show:isMatch,card:focusedCard,cardsMatch:isMatch,onClose:blurCard,allPairsFound:allPairsFound}),isNoMatch&&/*#__PURE__*/_jsx(NoMatchCard,{onClose:blurCard})]});};export default Memory;","map":{"version":3,"sources":["C:/Users/Martin/R_2021/memory/src/pages/Memory/Memory.js"],"names":["React","useState","useEffect","useCallback","MemoryCard","Backdrop","OpenCard","NoMatchCard","classes","Memory","props","cards","setCards","revealedCards","setRevealedCards","isMatch","setIsMatch","focusedCard","setFocusedCard","showBackdrop","setShowBackdrop","isNoMatch","setIsNoMatch","onFinish","allPairsFound","filter","card","pairFound","length","cardCover","updatedCards","map","revealed","blurCard","setTimeout","validateCardClick","cardId","id","showFeedback","cardsMatch","checkForMatch","visibleCards","pairId","updateCards","clickedCardId","selectedCardIndex","findIndex","selectedCard","cardClickHandler","isValidCardClick","prevRevealedCards","increaseCount","find","renderedCards","show","memorycards","isOver"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\n\r\nimport MemoryCard from '../../components/MemoryCard/MemoryCard';\r\nimport Backdrop from '../../components/Backdrop/Backdrop';\r\nimport OpenCard from '../../components/OpenCard/OpenCard';\r\nimport NoMatchCard from '../../components/NoMatchCard/NoMatchCard';\r\n\r\nimport classes from './Memory.module.css';\r\n\r\nconst Memory = (props) => {\r\n  const [cards, setCards] = useState(props.cards);\r\n  const [revealedCards, setRevealedCards] = useState(0);\r\n  const [isMatch, setIsMatch] = useState();\r\n  const [focusedCard, setFocusedCard] = useState();\r\n  const [showBackdrop, setShowBackdrop] = useState();\r\n  const [isNoMatch, setIsNoMatch] = useState();\r\n\r\n  const { onFinish } = props;\r\n\r\n  let allPairsFound = cards.filter((card) => !card.pairFound).length === 0;\r\n\r\n  useEffect(() => {}, [cards]);\r\n\r\n  const cardCover = useCallback(() => {\r\n    setRevealedCards(0);\r\n    const updatedCards = cards.map((card) => {\r\n      return {\r\n        ...card,\r\n        revealed: card.pairFound,\r\n      };\r\n    });\r\n    setCards(updatedCards);\r\n  }, [cards, setCards, setRevealedCards]);\r\n\r\n  useEffect(() => {\r\n    return cardCover();\r\n  }, []);\r\n\r\n  const blurCard = useCallback(() => {\r\n    setIsMatch(false);\r\n    setIsNoMatch(false);\r\n\r\n    setTimeout(() => {\r\n      setShowBackdrop(false);\r\n      setFocusedCard(null);\r\n    }, 500);\r\n\r\n    setTimeout(() => {\r\n      cardCover();\r\n    }, 400);\r\n\r\n    const allPairsFound = (cards.filter(card => !card.pairFound)).length === 0;\r\n\r\n    if (allPairsFound) {\r\n      return onFinish();\r\n    }\r\n  }, [\r\n    setIsMatch,\r\n    setShowBackdrop,\r\n    setFocusedCard,\r\n    cardCover,\r\n    onFinish,\r\n    cards\r\n  ]);\r\n\r\n  const validateCardClick = (cardId) => {\r\n    if (focusedCard && focusedCard.id === cardId) {\r\n      return false;\r\n    }\r\n\r\n    if (revealedCards >= 2) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  const showFeedback = (cardsMatch) => {\r\n    if (cardsMatch) {\r\n      setTimeout(() => {\r\n        setRevealedCards(0);\r\n        setShowBackdrop(true);\r\n        return setIsMatch(true);\r\n      }, 1000);\r\n    }\r\n\r\n    if (!cardsMatch) {\r\n      setTimeout(() => {\r\n        setIsNoMatch(true);\r\n        setShowBackdrop(true);\r\n      }, 1400);\r\n    }\r\n  };\r\n\r\n  const checkForMatch = (cards) => {\r\n    if (revealedCards === 0) {\r\n      return;\r\n    }\r\n\r\n    if (revealedCards === 1) {\r\n      const visibleCards = cards.filter(\r\n        (card) => card.revealed && !card.pairFound\r\n      );\r\n\r\n      const cardsMatch = visibleCards[0].pairId === visibleCards[1].pairId;\r\n\r\n      if (cardsMatch) {\r\n        for (const card of visibleCards) {\r\n          card.pairFound = true;\r\n        }\r\n      }\r\n\r\n      showFeedback(cardsMatch);\r\n    }\r\n  };\r\n\r\n  const updateCards = (clickedCardId) => {\r\n    const updatedCards = [...cards];\r\n    const selectedCardIndex = updatedCards.findIndex(\r\n      (card) => card.id === clickedCardId\r\n    );\r\n    const selectedCard = updatedCards[selectedCardIndex];\r\n\r\n    selectedCard.revealed = true;\r\n    updatedCards[selectedCardIndex] = selectedCard;\r\n\r\n    return updatedCards;\r\n  };\r\n\r\n  const cardClickHandler = (cardId) => {\r\n    const isValidCardClick = validateCardClick(cardId);\r\n    if (!isValidCardClick) {\r\n      return;\r\n    }\r\n\r\n    setRevealedCards((prevRevealedCards) => prevRevealedCards + 1);\r\n    props.increaseCount();\r\n    setFocusedCard(cards.find((card) => card.id === cardId));\r\n\r\n    const updatedCards = updateCards(cardId);\r\n    setCards(updatedCards);\r\n\r\n    checkForMatch(updatedCards);\r\n  };\r\n\r\n  const renderedCards = cards.map((card) => {\r\n    return (\r\n      <MemoryCard\r\n        card={card}\r\n        key={card.id}\r\n        clickHandler={cardClickHandler}\r\n        disabled={revealedCards >= 2}\r\n        cards={cards}\r\n      />\r\n    );\r\n  });\r\n\r\n  if (!props.show) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className={classes.memorycards}>\r\n      {!props.isOver && renderedCards}\r\n      <Backdrop show={showBackdrop} />\r\n      <OpenCard\r\n        show={isMatch}\r\n        card={focusedCard}\r\n        cardsMatch={isMatch}\r\n        onClose={blurCard}\r\n        allPairsFound={allPairsFound}\r\n      />\r\n      {isNoMatch && <NoMatchCard onClose={blurCard} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Memory;\r\n"]},"metadata":{},"sourceType":"module"}