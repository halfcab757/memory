{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Martin\\\\R_2021\\\\memory\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport MemoryCards from './components/MemoryCards/MemoryCards';\nimport Start from './pages/Start/Start';\nimport Final from './pages/Final/Final';\nimport Header from './components/Layout/Header/Header';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [started, setStarted] = useState(); // isOver default ändern\n\n  const [isOver, setIsOver] = useState(); // set counter to zero\n\n  const [counter, setCounter] = useState(3);\n  const [mode, setMode] = useState('memes');\n\n  function startGameHandler() {\n    setIsOver(false);\n    setStarted(true);\n  }\n\n  function finishGame() {\n    setIsOver(true);\n  }\n\n  function increaseCounter() {\n    console.log('increasee');\n    setCounter(prevCounter => prevCounter + 1);\n  }\n\n  function selectModeHandler(mode) {\n    setMode(mode);\n    console.log(mode);\n  }\n\n  console.log('counter', counter);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      count: counter,\n      activeMode: mode,\n      onSelectMode: selectModeHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [!started && /*#__PURE__*/_jsxDEV(Start, {\n        onStart: startGameHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 24\n      }, this), started && !isOver && /*#__PURE__*/_jsxDEV(MemoryCards, {\n        increaseCount: increaseCounter,\n        onFinish: finishGame,\n        isOver: isOver,\n        count: counter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(Final, {\n        show: isOver,\n        onStart: startGameHandler,\n        counter: counter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"GLhWNYSw8rRm5kpxK6DXTJ0rsMk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Martin/R_2021/memory/src/App.js"],"names":["React","useState","MemoryCards","Start","Final","Header","App","started","setStarted","isOver","setIsOver","counter","setCounter","mode","setMode","startGameHandler","finishGame","increaseCounter","console","log","prevCounter","selectModeHandler"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,WAAP,MAAwB,sCAAxB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,MAAP,MAAmB,mCAAnB;AAEA,OAAO,WAAP;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,EAAtC,CAFa,CAGb;;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,EAApC,CAJa,CAKb;;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACY,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,OAAD,CAAhC;;AAEA,WAASc,gBAAT,GAA4B;AAC1BL,IAAAA,SAAS,CAAC,KAAD,CAAT;AACAF,IAAAA,UAAU,CAAC,IAAD,CAAV;AACD;;AAED,WAASQ,UAAT,GAAsB;AACpBN,IAAAA,SAAS,CAAC,IAAD,CAAT;AACD;;AAED,WAASO,eAAT,GAA2B;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAP,IAAAA,UAAU,CAACQ,WAAW,IAAIA,WAAW,GAAG,CAA9B,CAAV;AACD;;AAED,WAASC,iBAAT,CAA2BR,IAA3B,EAAiC;AAC/BC,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AACD;;AAEDK,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBR,OAAvB;AAEA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE,QAAC,MAAD;AACE,MAAA,KAAK,EAAEA,OADT;AAEE,MAAA,UAAU,EAAEE,IAFd;AAGE,MAAA,YAAY,EAAEQ;AAHhB;AAAA;AAAA;AAAA;AAAA,YADF,eAKI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,iBACG,CAACd,OAAD,iBAAY,QAAC,KAAD;AAAO,QAAA,OAAO,EAAEQ;AAAhB;AAAA;AAAA;AAAA;AAAA,cADf,EAEGR,OAAO,IAAI,CAACE,MAAZ,iBAAsB,QAAC,WAAD;AACP,QAAA,aAAa,EAAEQ,eADR;AAEP,QAAA,QAAQ,EAAED,UAFH;AAGP,QAAA,MAAM,EAAEP,MAHD;AAIP,QAAA,KAAK,EAAEE;AAJA;AAAA;AAAA;AAAA;AAAA,cAFzB,eAOE,QAAC,KAAD;AACc,QAAA,IAAI,EAAEF,MADpB;AAEc,QAAA,OAAO,EAAEM,gBAFvB;AAGc,QAAA,OAAO,EAAEJ;AAHvB;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;GAlDQL,G;;KAAAA,G;AAoDT,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react';\n\nimport MemoryCards from './components/MemoryCards/MemoryCards';\nimport Start from './pages/Start/Start';\nimport Final from './pages/Final/Final';\nimport Header from './components/Layout/Header/Header';\n\nimport './App.css';\n\nfunction App() {\n\n  const [started, setStarted] = useState();\n  // isOver default ändern\n  const [isOver, setIsOver] = useState();\n  // set counter to zero\n  const [counter, setCounter] = useState(3);\n  const [mode, setMode] = useState('memes');\n\n  function startGameHandler() {\n    setIsOver(false);\n    setStarted(true);\n  }\n\n  function finishGame() {\n    setIsOver(true);\n  }\n\n  function increaseCounter() {\n    console.log('increasee');\n    setCounter(prevCounter => prevCounter + 1);\n  }\n\n  function selectModeHandler(mode) {\n    setMode(mode);\n    console.log(mode);\n  }\n\n  console.log('counter', counter);\n\n  return (\n    <React.Fragment>\n      <Header \n        count={counter}\n        activeMode={mode}\n        onSelectMode={selectModeHandler}/>\n        <div className='App'>\n          {!started && <Start onStart={startGameHandler}/>}\n          {started && !isOver && <MemoryCards \n                          increaseCount={increaseCounter}\n                          onFinish={finishGame}\n                          isOver={isOver}\n                          count={counter}/>}\n          <Final \n                        show={isOver}\n                        onStart={startGameHandler}\n                        counter={counter}/>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}