{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Martin\\\\R_2021\\\\memory\\\\src\\\\components\\\\OpenCard\\\\OpenCard.js\";\nimport React from 'react';\nimport Transition from 'react-transition-group/Transition';\nimport classes from './OpenCard.module.css'; // import Backdrop from '../Backdrop/Backdrop';\n\nimport Button from '../UI/Button/Button';\nimport OpenCardQuote from '../OpenCardQuote/OpenCardQuote'; // import meme from '../../assets/meme.jpg';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function OpenCard(props) {\n  console.log('rendering opencard');\n  return (\n    /*#__PURE__*/\n    // <Backdrop\n    //     show={props.card}>\n    _jsxDEV(Transition, {\n      in: props.show,\n      timeout: 400,\n      mountOnEnter: true,\n      unmountOnExit: true,\n      children: state => {\n        const cssClasses = [classes.OpenCard, state === 'entering' ? classes.Open : state === 'exiting' ? classes.Closed : null];\n        const quoteClasses = [classes.Quote__lineLeft, state === 'entered' ? classes.Shown : null];\n        const quoteClassesTwo = [classes.Quote__lineRight, state === 'entered' ? classes.ShownTwo : null];\n        const artistClasses = [classes.Quote__artist, state === 'entered' ? classes.ShownThree : null];\n        const funFactClasses = [classes.FunFact, state === 'entered' ? classes.Visible : null];\n        const buttonClasses = [classes.ButtonContainer, state === 'entered' ? classes.Visible : null];\n\n        const renderedCard = /*#__PURE__*/_jsxDEV(\"div\", {\n          className: cssClasses.join(' '),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: '80%',\n              margin: '0 auto'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.Quote,\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Du hast ein Match : )\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: quoteClasses.join(' '),\n                children: [\"\\\"\", props.card.fullQuote[0]]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: quoteClassesTwo.join(' '),\n                children: [props.card.fullQuote[1], \"\\\"\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: artistClasses.join(' '),\n                children: props.card.artist\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: funFactClasses.join(' '),\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Wusstest du schon, dass...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Queen teilweise mit zehn Songs gleichzeitig in der Top 10 waren?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: buttonClasses.join(' '),\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              clickHandler: props.onClose,\n              type: \"button\",\n              look: \"literature\",\n              children: \"Weiter\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 29\n        }, this);\n\n        return renderedCard;\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this) // </Backdrop>\n\n  );\n}\n_c = OpenCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"OpenCard\");","map":{"version":3,"sources":["C:/Users/Martin/R_2021/memory/src/components/OpenCard/OpenCard.js"],"names":["React","Transition","classes","Button","OpenCardQuote","OpenCard","props","console","log","show","state","cssClasses","Open","Closed","quoteClasses","Quote__lineLeft","Shown","quoteClassesTwo","Quote__lineRight","ShownTwo","artistClasses","Quote__artist","ShownThree","funFactClasses","FunFact","Visible","buttonClasses","ButtonContainer","renderedCard","join","width","margin","Quote","card","fullQuote","artist","onClose"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Transition from 'react-transition-group/Transition';\r\n\r\nimport classes from './OpenCard.module.css';\r\n\r\n// import Backdrop from '../Backdrop/Backdrop';\r\nimport Button from '../UI/Button/Button';\r\nimport OpenCardQuote from '../OpenCardQuote/OpenCardQuote';\r\n\r\n// import meme from '../../assets/meme.jpg';\r\n\r\nexport default function OpenCard(props) {\r\n    console.log('rendering opencard');\r\n\r\n    return (\r\n        // <Backdrop\r\n        //     show={props.card}>\r\n            <Transition\r\n                in={props.show}\r\n                timeout={400}\r\n                mountOnEnter\r\n                unmountOnExit>\r\n                {state => {\r\n                    const cssClasses = [\r\n                        classes.OpenCard,\r\n                        state === 'entering'\r\n                        ? classes.Open\r\n                        : state === 'exiting' \r\n                        ? classes.Closed\r\n                        : null\r\n                    ];\r\n\r\n                    const quoteClasses = [\r\n                        classes.Quote__lineLeft,\r\n                        state === 'entered'\r\n                        ? classes.Shown\r\n                        : null\r\n                    ];\r\n\r\n                    const quoteClassesTwo = [\r\n                        classes.Quote__lineRight,\r\n                        state === 'entered'\r\n                        ? classes.ShownTwo\r\n                        : null\r\n                    ];\r\n\r\n                    const artistClasses = [\r\n                        classes.Quote__artist,\r\n                        state === 'entered'\r\n                        ? classes.ShownThree\r\n                        : null\r\n                    ];\r\n\r\n                    const funFactClasses = [\r\n                        classes.FunFact,\r\n                        state === 'entered'\r\n                        ? classes.Visible\r\n                        : null\r\n                    ];\r\n\r\n                    const buttonClasses = [\r\n                        classes.ButtonContainer,\r\n                        state === 'entered'\r\n                        ? classes.Visible\r\n                        : null\r\n                    ]\r\n\r\n                    const renderedCard = (\r\n                            <div\r\n                                className={cssClasses.join(' ')}>\r\n                                <div style={{width: '80%', margin: '0 auto'}}>\r\n                                        {/* Den Part zu Song infos in extra Component, auch wg. Animation */}\r\n                                        {/* <div className={classes.Quote}>\r\n                                            <p className={classes.Quote__lineLeft}>\"{props.card.fullQuote[0]}</p>\r\n                                            <p className={classes.Quote__lineRight}>{props.card.fullQuote[1]}\"</p>\r\n                                            <p className={classes.Quote__artist}>{props.card.artist}</p>\r\n                                        </div> */}\r\n                                        {/* <OpenCardQuote \r\n                                            quote={props.card.fullQuote}\r\n                                            artist={props.card.artist}/> */}\r\n                                    <div className={classes.Quote}>\r\n                                        <h3>Du hast ein Match : )</h3>\r\n                                            <p className={quoteClasses.join(' ')}>\"{props.card.fullQuote[0]}</p>\r\n                                            <p className={quoteClassesTwo.join(' ')}>{props.card.fullQuote[1]}\"</p>\r\n                                            <p className={artistClasses.join(' ')}>{props.card.artist}</p>\r\n                                        </div>\r\n                                        {/* <p>Fast eine Freude wie auf Tinder, oder?</p> nur beim ersten Match */}\r\n                                    <div className={funFactClasses.join(' ')}>\r\n                                        <h3>Wusstest du schon, dass...</h3>\r\n                                        <p>Queen teilweise mit zehn Songs gleichzeitig in der Top 10 waren?</p>\r\n                                    </div>\r\n                                </div>\r\n                                <div \r\n                                    className={buttonClasses.join(' ')}>\r\n                                    <Button \r\n                                        clickHandler={props.onClose}\r\n                                        type='button'\r\n                                        look='literature'>\r\n                                        Weiter\r\n                                    </Button>\r\n                                </div>\r\n                            </div>\r\n                    );\r\n                \r\n\r\n                    return renderedCard;\r\n                }}\r\n\r\n            </Transition>\r\n        // </Backdrop>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}