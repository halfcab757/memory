[{"C:\\Users\\Martin\\R_2021\\memory\\src\\index.js":"1","C:\\Users\\Martin\\R_2021\\memory\\src\\App.js":"2","C:\\Users\\Martin\\R_2021\\memory\\src\\components\\MemoryCard\\MemoryCard.js":"3","C:\\Users\\Martin\\R_2021\\memory\\src\\data\\Cards.js":"4","C:\\Users\\Martin\\R_2021\\memory\\src\\components\\Modal\\Modal.js":"5","C:\\Users\\Martin\\R_2021\\memory\\src\\components\\UI\\Button\\Button.js":"6","C:\\Users\\Martin\\R_2021\\memory\\src\\components\\OpenCard\\OpenCard.js":"7","C:\\Users\\Martin\\R_2021\\memory\\src\\components\\Backdrop\\Backdrop.js":"8","C:\\Users\\Martin\\R_2021\\memory\\src\\pages\\Start\\Start.js":"9","C:\\Users\\Martin\\R_2021\\memory\\src\\components\\OpenCardQuote\\OpenCardQuote.js":"10","C:\\Users\\Martin\\R_2021\\memory\\src\\pages\\Final\\Final.js":"11","C:\\Users\\Martin\\R_2021\\memory\\src\\pages\\About\\About.js":"12","C:\\Users\\Martin\\R_2021\\memory\\src\\components\\AboutCard\\AboutCard.js":"13","C:\\Users\\Martin\\R_2021\\memory\\src\\data\\about.js":"14","C:\\Users\\Martin\\R_2021\\memory\\src\\components\\DetailCard\\DetailCard.js":"15","C:\\Users\\Martin\\R_2021\\memory\\src\\components\\About\\AboutApp\\AboutApp.js":"16","C:\\Users\\Martin\\R_2021\\memory\\src\\components\\About\\Contact\\Contact.js":"17","C:\\Users\\Martin\\R_2021\\memory\\src\\components\\About\\AboutMe\\AboutMe.js":"18","C:\\Users\\Martin\\R_2021\\memory\\src\\components\\About\\TechStack\\TechStack.js":"19","C:\\Users\\Martin\\R_2021\\memory\\src\\components\\Layout\\Navigation\\Navigation.js":"20","C:\\Users\\Martin\\R_2021\\memory\\src\\pages\\Memory\\Memory.js":"21","C:\\Users\\Martin\\R_2021\\memory\\src\\components\\NoMatchCard\\NoMatchCard.js":"22","C:\\Users\\Martin\\R_2021\\memory\\src\\components\\Welcome\\Welcome.js":"23"},{"size":142,"mtime":1618990429840,"results":"24","hashOfConfig":"25"},{"size":3633,"mtime":1643365101359,"results":"26","hashOfConfig":"25"},{"size":937,"mtime":1640796819485,"results":"27","hashOfConfig":"25"},{"size":15318,"mtime":1643450092504,"results":"28","hashOfConfig":"25"},{"size":470,"mtime":1620460795855,"results":"29","hashOfConfig":"30"},{"size":392,"mtime":1640797202965,"results":"31","hashOfConfig":"25"},{"size":2782,"mtime":1643446457568,"results":"32","hashOfConfig":"25"},{"size":849,"mtime":1640796309738,"results":"33","hashOfConfig":"25"},{"size":1380,"mtime":1640634071770,"results":"34","hashOfConfig":"25"},{"size":1067,"mtime":1625812322688,"results":"35","hashOfConfig":"30"},{"size":3153,"mtime":1640512698040,"results":"36","hashOfConfig":"25"},{"size":2019,"mtime":1643112140008,"results":"37","hashOfConfig":"25"},{"size":276,"mtime":1640796294886,"results":"38","hashOfConfig":"25"},{"size":748,"mtime":1643112196951,"results":"39","hashOfConfig":"25"},{"size":1273,"mtime":1640796587664,"results":"40","hashOfConfig":"25"},{"size":1360,"mtime":1643198130594,"results":"41","hashOfConfig":"25"},{"size":592,"mtime":1643447793951,"results":"42","hashOfConfig":"25"},{"size":783,"mtime":1643447772157,"results":"43","hashOfConfig":"25"},{"size":658,"mtime":1640796203797,"results":"44","hashOfConfig":"25"},{"size":644,"mtime":1640625591302,"results":"45","hashOfConfig":"25"},{"size":4289,"mtime":1643450162714,"results":"46","hashOfConfig":"25"},{"size":353,"mtime":1643197919203,"results":"47","hashOfConfig":"25"},{"size":823,"mtime":1643447911513,"results":"48","hashOfConfig":"25"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},"cr090c",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"16tpnz5",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Martin\\R_2021\\memory\\src\\index.js",[],["98","99"],"C:\\Users\\Martin\\R_2021\\memory\\src\\App.js",[],"C:\\Users\\Martin\\R_2021\\memory\\src\\components\\MemoryCard\\MemoryCard.js",[],"C:\\Users\\Martin\\R_2021\\memory\\src\\data\\Cards.js",[],"C:\\Users\\Martin\\R_2021\\memory\\src\\components\\Modal\\Modal.js",[],["100","101"],"C:\\Users\\Martin\\R_2021\\memory\\src\\components\\UI\\Button\\Button.js",[],"C:\\Users\\Martin\\R_2021\\memory\\src\\components\\OpenCard\\OpenCard.js",[],"C:\\Users\\Martin\\R_2021\\memory\\src\\components\\Backdrop\\Backdrop.js",[],"C:\\Users\\Martin\\R_2021\\memory\\src\\pages\\Start\\Start.js",[],"C:\\Users\\Martin\\R_2021\\memory\\src\\components\\OpenCardQuote\\OpenCardQuote.js",[],"C:\\Users\\Martin\\R_2021\\memory\\src\\pages\\Final\\Final.js",[],"C:\\Users\\Martin\\R_2021\\memory\\src\\pages\\About\\About.js",[],"C:\\Users\\Martin\\R_2021\\memory\\src\\components\\AboutCard\\AboutCard.js",[],"C:\\Users\\Martin\\R_2021\\memory\\src\\data\\about.js",[],"C:\\Users\\Martin\\R_2021\\memory\\src\\components\\DetailCard\\DetailCard.js",[],"C:\\Users\\Martin\\R_2021\\memory\\src\\components\\About\\AboutApp\\AboutApp.js",[],"C:\\Users\\Martin\\R_2021\\memory\\src\\components\\About\\Contact\\Contact.js",[],"C:\\Users\\Martin\\R_2021\\memory\\src\\components\\About\\AboutMe\\AboutMe.js",[],"C:\\Users\\Martin\\R_2021\\memory\\src\\components\\About\\TechStack\\TechStack.js",[],"C:\\Users\\Martin\\R_2021\\memory\\src\\components\\Layout\\Navigation\\Navigation.js",[],"C:\\Users\\Martin\\R_2021\\memory\\src\\pages\\Memory\\Memory.js",["102"],"import React, { useState, useEffect, useCallback } from 'react';\r\n\r\nimport MemoryCard from '../../components/MemoryCard/MemoryCard';\r\nimport Backdrop from '../../components/Backdrop/Backdrop';\r\nimport OpenCard from '../../components/OpenCard/OpenCard';\r\nimport NoMatchCard from '../../components/NoMatchCard/NoMatchCard';\r\n\r\nimport classes from './Memory.module.css';\r\n\r\nconst Memory = (props) => {\r\n  const [cards, setCards] = useState(props.cards);\r\n  const [revealedCards, setRevealedCards] = useState(0);\r\n  const [isMatch, setIsMatch] = useState();\r\n  const [focusedCard, setFocusedCard] = useState();\r\n  const [showBackdrop, setShowBackdrop] = useState();\r\n  const [isNoMatch, setIsNoMatch] = useState();\r\n\r\n  const { onFinish } = props;\r\n\r\n  let allPairsFound = cards.filter((card) => !card.pairFound).length === 0;\r\n\r\n  useEffect(() => {}, [cards]);\r\n\r\n  const cardCover = useCallback(() => {\r\n    setRevealedCards(0);\r\n    const updatedCards = cards.map((card) => {\r\n      return {\r\n        ...card,\r\n        revealed: card.pairFound,\r\n      };\r\n    });\r\n    setCards(updatedCards);\r\n  }, [cards, setCards, setRevealedCards]);\r\n\r\n  useEffect(() => {\r\n    return cardCover();\r\n  }, []);\r\n\r\n  const blurCard = useCallback(() => {\r\n    setIsMatch(false);\r\n    setIsNoMatch(false);\r\n\r\n    setTimeout(() => {\r\n      setShowBackdrop(false);\r\n      setFocusedCard(null);\r\n    }, 500);\r\n\r\n    setTimeout(() => {\r\n      cardCover();\r\n    }, 400);\r\n\r\n    const allPairsFound = (cards.filter(card => !card.pairFound)).length === 0;\r\n\r\n    if (allPairsFound) {\r\n      return onFinish();\r\n    }\r\n  }, [\r\n    setIsMatch,\r\n    setShowBackdrop,\r\n    setFocusedCard,\r\n    cardCover,\r\n    onFinish,\r\n    cards\r\n  ]);\r\n\r\n  const validateCardClick = (cardId) => {\r\n    if (focusedCard && focusedCard.id === cardId) {\r\n      return false;\r\n    }\r\n\r\n    if (revealedCards >= 2) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  const showFeedback = (cardsMatch) => {\r\n    if (cardsMatch) {\r\n      setTimeout(() => {\r\n        setRevealedCards(0);\r\n        setShowBackdrop(true);\r\n        return setIsMatch(true);\r\n      }, 1000);\r\n    }\r\n\r\n    if (!cardsMatch) {\r\n      setTimeout(() => {\r\n        setIsNoMatch(true);\r\n        setShowBackdrop(true);\r\n      }, 1400);\r\n    }\r\n  };\r\n\r\n  const checkForMatch = (cards) => {\r\n    if (revealedCards === 0) {\r\n      return;\r\n    }\r\n\r\n    if (revealedCards === 1) {\r\n      const visibleCards = cards.filter(\r\n        (card) => card.revealed && !card.pairFound\r\n      );\r\n\r\n      const cardsMatch = visibleCards[0].pairId === visibleCards[1].pairId;\r\n\r\n      if (cardsMatch) {\r\n        for (const card of visibleCards) {\r\n          card.pairFound = true;\r\n        }\r\n      }\r\n\r\n      showFeedback(cardsMatch);\r\n    }\r\n  };\r\n\r\n  const updateCards = (clickedCardId) => {\r\n    const updatedCards = [...cards];\r\n    const selectedCardIndex = updatedCards.findIndex(\r\n      (card) => card.id === clickedCardId\r\n    );\r\n    const selectedCard = updatedCards[selectedCardIndex];\r\n\r\n    selectedCard.revealed = true;\r\n    updatedCards[selectedCardIndex] = selectedCard;\r\n\r\n    return updatedCards;\r\n  };\r\n\r\n  const cardClickHandler = (cardId) => {\r\n    const isValidCardClick = validateCardClick(cardId);\r\n    if (!isValidCardClick) {\r\n      return;\r\n    }\r\n\r\n    setRevealedCards((prevRevealedCards) => prevRevealedCards + 1);\r\n    props.increaseCount();\r\n    setFocusedCard(cards.find((card) => card.id === cardId));\r\n\r\n    const updatedCards = updateCards(cardId);\r\n    setCards(updatedCards);\r\n\r\n    checkForMatch(updatedCards);\r\n  };\r\n\r\n  const renderedCards = cards.map((card) => {\r\n    return (\r\n      <MemoryCard\r\n        card={card}\r\n        key={card.id}\r\n        clickHandler={cardClickHandler}\r\n        disabled={revealedCards >= 2}\r\n        cards={cards}\r\n      />\r\n    );\r\n  });\r\n\r\n  if (!props.show) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className={classes.memorycards}>\r\n      {!props.isOver && renderedCards}\r\n      <Backdrop show={showBackdrop} />\r\n      <OpenCard\r\n        show={isMatch}\r\n        card={focusedCard}\r\n        cardsMatch={isMatch}\r\n        onClose={blurCard}\r\n        allPairsFound={allPairsFound}\r\n      />\r\n      {isNoMatch && <NoMatchCard onClose={blurCard} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Memory;\r\n","C:\\Users\\Martin\\R_2021\\memory\\src\\components\\NoMatchCard\\NoMatchCard.js",[],"C:\\Users\\Martin\\R_2021\\memory\\src\\components\\Welcome\\Welcome.js",[],{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"103","replacedBy":"107"},{"ruleId":"105","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":37,"column":6,"nodeType":"111","endLine":37,"endColumn":8,"suggestions":"112"},"no-native-reassign",["113"],"no-negated-in-lhs",["114"],["113"],["114"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'cardCover'. Either include it or remove the dependency array.","ArrayExpression",["115"],"no-global-assign","no-unsafe-negation",{"desc":"116","fix":"117"},"Update the dependencies array to be: [cardCover]",{"range":"118","text":"119"},[1190,1192],"[cardCover]"]